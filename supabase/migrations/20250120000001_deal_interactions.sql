-- Create dealInteractions table
create table "public"."dealInteractions" (
    "id" bigint generated by default as identity not null,
    "deal_id" bigint not null,
    "sales_id" bigint,
    "type" text not null,
    "date" timestamp with time zone not null default now(),
    "duration" integer,
    "participant_ids" bigint[],
    "notes" text,
    "attachments" jsonb[],
    "sentiment" text
);

alter table "public"."dealInteractions" enable row level security;

CREATE UNIQUE INDEX "dealInteractions_pkey" ON public."dealInteractions" USING btree (id);

alter table "public"."dealInteractions" add constraint "dealInteractions_pkey" PRIMARY KEY using index "dealInteractions_pkey";

alter table "public"."dealInteractions" add constraint "dealInteractions_deal_id_fkey" FOREIGN KEY (deal_id) REFERENCES deals(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."dealInteractions" validate constraint "dealInteractions_deal_id_fkey";

alter table "public"."dealInteractions" add constraint "dealInteractions_sales_id_fkey" FOREIGN KEY (sales_id) REFERENCES sales(id) not valid;

alter table "public"."dealInteractions" validate constraint "dealInteractions_sales_id_fkey";

-- Grant permissions
grant delete on table "public"."dealInteractions" to "authenticated";
grant insert on table "public"."dealInteractions" to "authenticated";
grant select on table "public"."dealInteractions" to "authenticated";
grant update on table "public"."dealInteractions" to "authenticated";

grant delete on table "public"."dealInteractions" to "service_role";
grant insert on table "public"."dealInteractions" to "service_role";
grant references on table "public"."dealInteractions" to "service_role";
grant select on table "public"."dealInteractions" to "service_role";
grant trigger on table "public"."dealInteractions" to "service_role";
grant truncate on table "public"."dealInteractions" to "service_role";
grant update on table "public"."dealInteractions" to "service_role";

-- Create policies
create policy "Enable insert for authenticated users only"
on "public"."dealInteractions"
as permissive
for insert
to authenticated
with check (true);

create policy "Enable read access for authenticated users"
on "public"."dealInteractions"
as permissive
for select
to authenticated
using (true);

create policy "Deal Interactions Update Policy"
on "public"."dealInteractions"
as permissive
for update
to authenticated
using (true);

create policy "Deal Interactions Delete Policy"
on "public"."dealInteractions"
as permissive
for delete
to authenticated
using (true);

